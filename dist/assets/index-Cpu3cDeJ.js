(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();const l={columns:9,rows:4},o={up:0,left:1,down:2,right:3},c={scale:3,framesPerSecond:10},m={movementSpeed:180},d={size:12,growthDurationSeconds:10,spacingThreshold:30,seedScaleFactor:.5},a={width:800,height:560},g={playerSpriteSheet:"/src/gameAssets/sprites/walk.png",homeBackground:"/src/gameAssets/maps/home.png",barrenBackground:"/src/gameAssets/maps/home_barren.png",seedSprite:"/src/gameAssets/cursedLand/objectsSeparately/rock1Shadow11.png",plantSprites:{eye:"/src/gameAssets/cursedLand/objectsSeparately/eyePlantShadow11.png",tentacle:"/src/gameAssets/cursedLand/objectsSeparately/tentaclePlantShadow11.png",jaws:"/src/gameAssets/cursedLand/objectsSeparately/jawsPlantShadow11.png",spike:"/src/gameAssets/cursedLand/objectsSeparately/spikePlantShadow11.png"}};class f{constructor(){this.loadedCount=0,this.totalAssets=0,this.isBarrenBackgroundAvailable=!1,this.assets={playerSprite:new Image,homeBackground:new Image,barrenBackground:new Image,seedSprite:new Image,plantSprites:{eye:new Image,tentacle:new Image,jaws:new Image,spike:new Image}}}async loadAllAssets(){return this.calculateTotalAssets(),this.loadAsset(this.assets.playerSprite,g.playerSpriteSheet),this.loadAsset(this.assets.homeBackground,g.homeBackground),this.loadAsset(this.assets.seedSprite,g.seedSprite),this.loadBarrenBackground(),Object.entries(g.plantSprites).forEach(([e,t])=>{this.loadAsset(this.assets.plantSprites[e],t)}),this.assets}getAssets(){return this.assets}isBarrenAvailable(){return this.isBarrenBackgroundAvailable}getLoadingProgress(){return this.totalAssets>0?this.loadedCount/this.totalAssets:0}areAllAssetsLoaded(){return this.loadedCount===this.totalAssets}calculateTotalAssets(){this.totalAssets=5+Object.keys(g.plantSprites).length}loadAsset(e,t){e.onload=()=>{this.loadedCount++,console.log(`Loaded asset: ${t} (${this.loadedCount}/${this.totalAssets})`)},e.onerror=()=>{console.error(`Failed to load asset: ${t}`),this.loadedCount++},e.src=t}loadBarrenBackground(){this.assets.barrenBackground.onload=()=>{this.isBarrenBackgroundAvailable=!0,this.loadedCount++,console.log(`Loaded barren background (${this.loadedCount}/${this.totalAssets})`)},this.assets.barrenBackground.onerror=()=>{this.isBarrenBackgroundAvailable=!1,this.loadedCount++,console.log("Barren background not available, using fallback pattern")},this.assets.barrenBackground.src=g.barrenBackground}}class P{constructor(){this.pressedKeys=new Set,this.validKeys=["w","a","s","d","p","b","1","2","3","4"]}initialize(){addEventListener("keydown",this.handleKeyDown.bind(this)),addEventListener("keyup",this.handleKeyUp.bind(this))}cleanup(){removeEventListener("keydown",this.handleKeyDown.bind(this)),removeEventListener("keyup",this.handleKeyUp.bind(this))}isKeyPressed(e){return this.pressedKeys.has(e.toLowerCase())}getPressedKeys(){return new Set(this.pressedKeys)}handleKeyDown(e){const t=e.key.toLowerCase();this.validKeys.includes(t)&&(this.pressedKeys.add(t),e.preventDefault())}handleKeyUp(e){this.pressedKeys.delete(e.key.toLowerCase())}}class C{constructor(e){this.clickHandlers=[],this.canvas=e}initialize(){this.canvas.addEventListener("click",this.handleClick.bind(this))}cleanup(){this.canvas.removeEventListener("click",this.handleClick.bind(this))}addClickHandler(e){this.clickHandlers.push(e)}removeClickHandler(e){const t=this.clickHandlers.indexOf(e);t>-1&&this.clickHandlers.splice(t,1)}handleClick(e){const t=this.canvas.getBoundingClientRect(),s={x:e.clientX-t.left,y:e.clientY-t.top};this.clickHandlers.forEach(n=>n(s))}}class w{constructor(e){this.spriteFrameWidth=0,this.spriteFrameHeight=0,this.inputManager=e,this.playerCharacter={xPosition:a.width/2,yPosition:a.height/2,currentRow:o.down,currentFrame:0,animationTimer:0,isMoving:!1}}initializeSpriteDimensions(e,t){this.spriteFrameWidth=Math.floor(e/l.columns),this.spriteFrameHeight=Math.floor(t/l.rows)}getPlayerCharacter(){return this.playerCharacter}updatePlayerMovement(e){const t=this.calculateMovementInput();this.applyMovement(t,e),this.updateAnimation(t,e),this.constrainToCanvas(),this.handleDirectionOverrides()}calculateMovementInput(){let e=0,t=0;this.inputManager.isKeyPressed("w")&&(t-=1),this.inputManager.isKeyPressed("s")&&(t+=1),this.inputManager.isKeyPressed("a")&&(e-=1),this.inputManager.isKeyPressed("d")&&(e+=1);const s=e!==0||t!==0;if(s&&e&&t){const n=1/Math.sqrt(2);e*=n,t*=n}return{horizontalMovement:e,verticalMovement:t,isMoving:s}}applyMovement(e,t){this.playerCharacter.isMoving=e.isMoving,Math.abs(e.horizontalMovement)>Math.abs(e.verticalMovement)?this.playerCharacter.currentRow=e.horizontalMovement>0?o.right:o.left:Math.abs(e.verticalMovement)>0&&(this.playerCharacter.currentRow=e.verticalMovement>0?o.down:o.up),this.playerCharacter.xPosition+=e.horizontalMovement*m.movementSpeed*t,this.playerCharacter.yPosition+=e.verticalMovement*m.movementSpeed*t}updateAnimation(e,t){const s=1/c.framesPerSecond;if(e.isMoving)for(this.playerCharacter.animationTimer+=t;this.playerCharacter.animationTimer>=s;)this.playerCharacter.currentFrame=(this.playerCharacter.currentFrame+1)%l.columns,this.playerCharacter.animationTimer-=s;else this.playerCharacter.currentFrame=0,this.playerCharacter.animationTimer=0}constrainToCanvas(){if(this.spriteFrameWidth===0||this.spriteFrameHeight===0)return;const e=this.spriteFrameWidth*c.scale,t=this.spriteFrameHeight*c.scale,s=e/2,n=t/2;this.playerCharacter.xPosition=Math.max(s,Math.min(a.width-s,this.playerCharacter.xPosition)),this.playerCharacter.yPosition=Math.max(n,Math.min(a.height-n,this.playerCharacter.yPosition))}handleDirectionOverrides(){this.inputManager.isKeyPressed("1")&&(this.playerCharacter.currentRow=o.up),this.inputManager.isKeyPressed("2")&&(this.playerCharacter.currentRow=o.left),this.inputManager.isKeyPressed("3")&&(this.playerCharacter.currentRow=o.down),this.inputManager.isKeyPressed("4")&&(this.playerCharacter.currentRow=o.right)}}class S{constructor(){this.plantedEntities=[],this.availablePlantTypes=["eye","tentacle","jaws","spike"]}getPlantedEntities(){return this.plantedEntities}updatePlantGrowth(){const e=performance.now();this.plantedEntities.forEach(t=>{t.hasGrown||(e-t.plantingTime)/1e3>=d.growthDurationSeconds&&(t.hasGrown=!0,console.log(`Plant at (${t.xPosition}, ${t.yPosition}) has grown into a ${t.plantType} plant!`))})}handlePlantingClick(e){this.plantedEntities.find(s=>Math.abs(s.xPosition-e.x)<d.spacingThreshold&&Math.abs(s.yPosition-e.y)<d.spacingThreshold)||this.plantSeed(e)}getPlantCount(){const e=this.plantedEntities.length,t=this.plantedEntities.filter(n=>n.hasGrown).length,s=e-t;return{total:e,seeds:s,mature:t}}clearAllPlants(){this.plantedEntities=[]}plantSeed(e){const t=this.getRandomPlantType(),s={xPosition:e.x,yPosition:e.y,plantingTime:performance.now(),hasGrown:!1,plantType:t};this.plantedEntities.push(s),console.log(`Planted ${t} seed at (${e.x}, ${e.y})`)}getRandomPlantType(){const e=Math.floor(Math.random()*this.availablePlantTypes.length);return this.availablePlantTypes[e]}}class k{constructor(e){this.useBarrenBackground=!0,this.cachedBarrenPattern=null,this.renderingContext=e}setUseBarrenBackground(e){this.useBarrenBackground=e}isUsingBarrenBackground(){return this.useBarrenBackground}renderBackground(e,t){const s=this.useBarrenBackground&&t?e.barrenBackground:e.homeBackground;s.complete&&s.naturalWidth>0?this.renderBackgroundImage(s):this.renderProceduralBarrenBackground()}renderBackgroundImage(e){this.renderingContext.drawImage(e,0,0,a.width,a.height)}renderProceduralBarrenBackground(){const e=this.generateBarrenPattern();e&&(this.renderingContext.save(),this.renderingContext.fillStyle=e,this.renderingContext.fillRect(0,0,a.width,a.height),this.renderingContext.restore())}generateBarrenPattern(){if(this.cachedBarrenPattern)return this.cachedBarrenPattern;const e=document.createElement("canvas");e.width=32,e.height=32;const t=e.getContext("2d");if(!t)return null;t.imageSmoothingEnabled=!1,t.fillStyle="#1a2324",t.fillRect(0,0,32,32),t.fillStyle="#202c2e",t.fillRect(0,0,16,16),t.fillRect(16,16,16,16),t.fillStyle="#233335";for(let s=0;s<24;s++){const n=Math.floor(Math.random()*32),r=Math.floor(Math.random()*32);t.fillRect(n,r,1,1)}return this.cachedBarrenPattern=this.renderingContext.createPattern(e,"repeat"),this.cachedBarrenPattern}}class M{constructor(e){this.renderingContext=e}renderAllPlants(e,t){e.forEach(s=>{this.renderSinglePlant(s,t)})}renderSinglePlant(e,t){this.renderingContext.save(),e.hasGrown?this.renderMaturePlant(e,t):this.renderSeedPlant(e,t),this.renderingContext.restore()}renderMaturePlant(e,t){const s=t.plantSprites[e.plantType];s.complete&&s.naturalWidth>0?this.renderPlantSprite(s,e.xPosition,e.yPosition,c.scale):this.renderFallbackMaturePlant(e.xPosition,e.yPosition)}renderSeedPlant(e,t){if(t.seedSprite.complete&&t.seedSprite.naturalWidth>0){const s=c.scale*d.seedScaleFactor;this.renderPlantSprite(t.seedSprite,e.xPosition,e.yPosition,s)}else this.renderFallbackSeed(e.xPosition,e.yPosition)}renderPlantSprite(e,t,s,n){const r=e.naturalWidth,h=e.naturalHeight,p=r*n,u=h*n;this.renderingContext.drawImage(e,t-p/2,s-u/2,p,u)}renderFallbackMaturePlant(e,t){this.renderingContext.fillStyle="#228B22",this.renderingContext.fillRect(e-d.size,t-d.size*2,d.size*2,d.size*2)}renderFallbackSeed(e,t){this.renderingContext.fillStyle="#8B4513",this.renderingContext.fillRect(e-4,t-4,8,8)}}class v{constructor(e){this.spriteConfig={columns:0,rows:0,frameWidth:0,frameHeight:0},this.renderingContext=e}initializeSpriteDimensions(e,t,s,n){this.spriteConfig={columns:s,rows:n,frameWidth:Math.floor(e/s),frameHeight:Math.floor(t/n)}}renderPlayerCharacter(e,t){if(!t.playerSprite.complete||this.spriteConfig.frameWidth===0)return;const s=e.currentFrame*this.spriteConfig.frameWidth,n=e.currentRow*this.spriteConfig.frameHeight,r=this.spriteConfig.frameWidth*c.scale,h=this.spriteConfig.frameHeight*c.scale;this.renderingContext.drawImage(t.playerSprite,s,n,this.spriteConfig.frameWidth,this.spriteConfig.frameHeight,Math.round(e.xPosition-r/2),Math.round(e.yPosition-h/2),r,h)}getSpriteConfiguration(){return this.spriteConfig}}class b{constructor(e){this.isRunning=!1,this.lastTimestamp=0;const t=document.getElementById(e);if(!t)throw new Error(`Canvas element with id '${e}' not found`);const s=t.getContext("2d");if(!s)throw new Error("Canvas 2D context not available");this.canvas=t,this.renderingContext=s,this.renderingContext.imageSmoothingEnabled=!1,this.assetLoader=new f,this.keyboardInput=new P,this.mouseInput=new C(this.canvas),this.playerMovement=new w(this.keyboardInput),this.plantManagement=new S,this.backgroundRenderer=new k(this.renderingContext),this.plantRenderer=new M(this.renderingContext),this.playerRenderer=new v(this.renderingContext)}async initialize(){console.log("Initializing Growing Stars game engine..."),this.gameAssets=await this.assetLoader.loadAllAssets(),this.keyboardInput.initialize(),this.mouseInput.initialize(),this.setupPlantingInput(),this.gameAssets.playerSprite.onload=()=>{this.initializeSpriteDimensions()},this.gameAssets.playerSprite.complete&&this.initializeSpriteDimensions(),console.log("Game engine initialized successfully")}start(){if(this.isRunning){console.warn("Game is already running");return}this.isRunning=!0,this.lastTimestamp=performance.now(),requestAnimationFrame(this.gameLoop.bind(this)),console.log("Game started")}stop(){this.isRunning=!1,this.keyboardInput.cleanup(),this.mouseInput.cleanup(),console.log("Game stopped")}setupPlantingInput(){let e=0;const t=500,s=()=>{if(this.keyboardInput.isKeyPressed("p")){const n=performance.now();if(n-e>t){const r=this.playerMovement.getPlayerCharacter();this.plantManagement.handlePlantingClick({x:r.xPosition,y:r.yPosition}),e=n}}};this.plantingInputHandler=s}initializeSpriteDimensions(){const e=this.gameAssets.playerSprite.naturalWidth,t=this.gameAssets.playerSprite.naturalHeight;this.playerMovement.initializeSpriteDimensions(e,t),this.playerRenderer.initializeSpriteDimensions(e,t,l.columns,l.rows),console.log(`Loaded sprite sheet: ${e}x${t} → frame ${Math.floor(e/l.columns)}x${Math.floor(t/l.rows)} (grid ${l.columns}x${l.rows})`)}gameLoop(e){if(!this.isRunning)return;const t=(e-this.lastTimestamp)/1e3;this.lastTimestamp=e,this.updateGameState(t),this.renderFrame(),requestAnimationFrame(this.gameLoop.bind(this))}updateGameState(e){this.keyboardInput.isKeyPressed("b")&&this.backgroundRenderer.setUseBarrenBackground(!this.backgroundRenderer.isUsingBarrenBackground()),this.plantingInputHandler&&this.plantingInputHandler(),this.playerMovement.updatePlayerMovement(e),this.plantManagement.updatePlantGrowth()}renderFrame(){this.renderingContext.clearRect(0,0,a.width,a.height),this.backgroundRenderer.renderBackground(this.gameAssets,this.assetLoader.isBarrenAvailable()),this.plantRenderer.renderAllPlants(this.plantManagement.getPlantedEntities(),this.gameAssets),this.playerRenderer.renderPlayerCharacter(this.playerMovement.getPlayerCharacter(),this.gameAssets)}getGameStats(){return{isRunning:this.isRunning,assetsLoaded:this.assetLoader.areAllAssetsLoaded(),loadingProgress:this.assetLoader.getLoadingProgress(),plantCount:this.plantManagement.getPlantCount(),playerPosition:{x:this.playerMovement.getPlayerCharacter().xPosition,y:this.playerMovement.getPlayerCharacter().yPosition}}}}const y=async()=>{try{const i=new b("game-canvas");await i.initialize(),i.start(),window.gameEngine=i,console.log("Growing Stars game started successfully!"),console.log("Controls:"),console.log("- WASD: Move character"),console.log("- P: Plant seed at player location"),console.log("- B: Toggle background"),console.log("- 1/2/3/4: Force player direction (testing)")}catch(i){console.error("Failed to initialize game:",i)}};document.readyState==="loading"?document.addEventListener("DOMContentLoaded",y):y();
//# sourceMappingURL=index-Cpu3cDeJ.js.map
